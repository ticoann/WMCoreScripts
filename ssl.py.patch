--- ssl.py.org  2015-05-26 20:46:42.269800890 +0200
+++ ssl.py      2015-05-26 20:56:07.378575042 +0200
@@ -189,14 +189,16 @@
                 else:
                     return v
         else:
-            return socket.send(self, data, flags)
+            return socket.send(data, flags)

-    def sendto(self, data, addr, flags=0):
+    def sendto(self, data, flags_or_addr, addr=None):
         if self._sslobj:
             raise ValueError("sendto not allowed on instances of %s" %
                              self.__class__)
+        elif addr is None:
+            return self._sock.sendto(data, flags_or_addr)
         else:
-            return socket.sendto(self, data, addr, flags)
+            return self._sock.sendto(data, flags_or_addr, addr)

     def sendall(self, data, flags=0):
         if self._sslobj:
@@ -211,7 +213,7 @@
                 count += v
             return amount
         else:
-            return socket.sendall(self, data, flags)
+            return socket.sendall(data, flags)

     def recv(self, buflen=1024, flags=0):
         if self._sslobj:
@@ -221,7 +223,7 @@
                     self.__class__)
             return self.read(buflen)
         else:
-            return socket.recv(self, buflen, flags)
+            return self._sock.recv(buflen, flags)

     def recv_into(self, buffer, nbytes=None, flags=0):
         if buffer and (nbytes is None):
@@ -238,21 +240,21 @@
             buffer[:v] = tmp_buffer
             return v
         else:
-            return socket.recv_into(self, buffer, nbytes, flags)
+            return self._sock.recv_into(buffer, nbytes, flags)

-    def recvfrom(self, addr, buflen=1024, flags=0):
+    def recvfrom(self, buflen=1024, flags=0):
         if self._sslobj:
             raise ValueError("recvfrom not allowed on instances of %s" %
                              self.__class__)
         else:
-            return socket.recvfrom(self, addr, buflen, flags)
+            return self._sock.recvfrom(buflen, flags)

     def recvfrom_into(self, buffer, nbytes=None, flags=0):
         if self._sslobj:
             raise ValueError("recvfrom_into not allowed on instances of %s" %
                              self.__class__)
         else:
-            return socket.recvfrom_into(self, buffer, nbytes, flags)
+            return self._sock.recvfrom_into(buffer, nbytes, flags)

     def pending(self):
         if self._sslobj:
